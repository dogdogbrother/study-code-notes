(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{70:function(t,e,s){"use strict";s.r(e);var a=s(0),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"自动部署项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动部署项目","aria-hidden":"true"}},[t._v("#")]),t._v(" 自动部署项目")]),t._v(" "),s("p",[t._v("根据前面的章节,咱们完成了一个node后台接口的项目,一个前端静态页面的项目.")]),t._v(" "),s("p",[t._v("虽然能够暂时和使用,但是有个小小的问题.就是我如何更新我线上的页面的.")]),t._v(" "),s("p",[t._v("正常的操作是这样的:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("打包,"),s("code",[t._v("git push")]),t._v("到仓库.")])]),t._v(" "),s("li",[s("p",[t._v("服务器这边git pull.")])]),t._v(" "),s("li",[s("p",[t._v("如果是node服务还要重启pm2.")])])]),t._v(" "),s("p",[t._v("比较繁琐,又要打开ssh又要输入路径什么的.所以我们可以选择释放下双手,利用webhooks进行自动化部署.")]),t._v(" "),s("h2",{attrs:{id:"webhooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webhooks","aria-hidden":"true"}},[t._v("#")]),t._v(" webhooks")])])}),[],!1,null,null,null);e.default=o.exports}}]);