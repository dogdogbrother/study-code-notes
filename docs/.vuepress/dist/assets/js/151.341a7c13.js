(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{130:function(t,a,e){"use strict";e.r(a);var s=e(0),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"使用webpackdevserver提升开发效率"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用webpackdevserver提升开发效率","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用webpackDevServer提升开发效率")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("先说个简单的,watch指令")]),e("br"),t._v("\n我们现在每次编写完代码,都要npn run bunlde打包,打包后才能看到效果,非常的不方便,我想每次编写玩代码保存后自动打包.")])]),t._v(" "),e("ol",[e("li",[t._v("在package.json文件中修改scripts参数.")])]),t._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("scripts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    watch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webpack ---watch'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("执行"),e("code",[t._v("npm run bunlde")]),t._v(",测试,每次保存新代码,dist目录中的文件都会更新.")])]),t._v(" "),e("blockquote",[e("p",[t._v("但是这样还不够好用,我们想要运行一个命令,能自动帮我们打开浏览器,还能模拟一些服务器的特性.这就用到了devServer.")])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("依旧是先按照"),e("code",[t._v("npm install webpack-dev-server -D")])])]),t._v(" "),e("li",[e("p",[t._v("在webpack.config.js文件的根级上添加devServwe配置.")])])]),t._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("devServer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    contentBase"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./dist'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("contentBase是最基础的配置,webpack帮我们起一个服务器,根路径就是dist目录.")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[e("p",[t._v("需要在package.json中的scripts写个脚本,"),e("code",[t._v("start:'webpack-dev-server'")])])]),t._v(" "),e("li",[e("p",[t._v("测试,输入"),e("code",[t._v("npm run start")]),t._v(",CMD提示,locahost:8080服务已经启动.这很vue,也很react,不错,也有热加载的功能.")])]),t._v(" "),e("li",[e("p",[t._v("现在只有contentBase配置,我们还可以添加"),e("code",[t._v("open:true")]),t._v(",这样当我们执行npm run start的时候,就会默认打开浏览器.")])]),t._v(" "),e("li",[e("p",[t._v("打开官网看下devServer都有啥配置,就会发现2个非常熟悉的配置,proxy代理,和port端口改变.")])])]),t._v(" "),e("h2",{attrs:{id:"知识点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#知识点","aria-hidden":"true"}},[t._v("#")]),t._v(" 知识点")]),t._v(" "),e("ol",[e("li",[t._v("webpack不仅可以在命令行中执行,也可以通过nodeJS来执行,node有webpack的中间件,webpack官网也有对于node API的介绍.")])])])}),[],!1,null,null,null);a.default=n.exports}}]);