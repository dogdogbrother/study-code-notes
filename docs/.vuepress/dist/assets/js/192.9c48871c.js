(window.webpackJsonp=window.webpackJsonp||[]).push([[192],{90:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"基本类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本类型")]),t._v(" "),a("h2",{attrs:{id:"数值型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值型","aria-hidden":"true"}},[t._v("#")]),t._v(" 数值型")]),t._v(" "),a("p",[t._v("python的number类型只有整型"),a("code",[t._v("int")]),t._v(",浮点型"),a("code",[t._v("float")]),t._v(".")]),t._v(" "),a("p",[t._v("但是和js不同的是,布尔值也是归在number类型中的.")]),t._v(" "),a("p",[t._v("我们可以尝试"),a("code",[t._v("int(true)")]),t._v(",输出是1,flase是0.")]),t._v(" "),a("h2",{attrs:{id:"字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串","aria-hidden":"true"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),a("p",[t._v("和Dart是一样的,单引号双引号是一直的,三引号是可以换行的.")]),t._v(" "),a("h2",{attrs:{id:"list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list","aria-hidden":"true"}},[t._v("#")]),t._v(" List")]),t._v(" "),a("p",[t._v("List就是数组大家都一样没什么好说的,有意思的是,python的数组是可以使用"),a("code",[t._v("+")]),t._v("和"),a("code",[t._v("*")]),t._v("的.")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("等于 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 等于 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"元祖-tuple"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元祖-tuple","aria-hidden":"true"}},[t._v("#")]),t._v(" 元祖 tuple")]),t._v(" "),a("p",[t._v("和List基本一样,不过是用"),a("code",[t._v("(1,2)")]),t._v("表示的.")]),t._v(" "),a("blockquote",[a("p",[t._v("str,list,tuple这三种数据类型都是 "),a("strong",[t._v("序列")]),t._v(" ,例如都使用"),a("code",[t._v("max([1,2,3])")]),t._v("这种方法.")])]),t._v(" "),a("h2",{attrs:{id:"集合-set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合-set","aria-hidden":"true"}},[t._v("#")]),t._v(" 集合 set")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("set")]),t._v("的特点是无序,用"),a("code",[t._v("{}")]),t._v("表示.")])]),t._v(" "),a("p",[t._v("无序意味着什么呢---不能用下标.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("set")]),t._v("内容的数据不能重复.(和js一样)")])]),t._v(" "),a("p",[a("code",[t._v("set")]),t._v("也支持"),a("code",[t._v("1 in {1,3,4}")]),t._v(",返回"),a("code",[t._v("true")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("set")]),t._v("结构的优势是什么呢?")])]),t._v(" "),a("p",[t._v("举个例子,我有2个"),a("code",[t._v("set")]),t._v("集合,"),a("code",[t._v("{1,2,3,4,5,6}")]),t._v("个"),a("code",[t._v("{3,4}")]),t._v(",我如何能剔除掉重复的单元呢?")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 {1,2,5,6} - 号的作用是求两个集合的差集")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("还可以使用 & 符号求两个集合共有的元素.")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 {3,4} 叫做 交集")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("code",[t._v("|")]),t._v("符号能合并两个集合,数学上叫并集.")]),t._v(" "),a("ul",[a("li",[t._v("需要注意的是,不能用"),a("code",[t._v("{}")]),t._v("来建立一个空集合,如果我们"),a("code",[t._v("type({})")]),t._v("测试一下的话,会发现是"),a("code",[t._v("dict")]),t._v("字典类型.空集合是要通过"),a("code",[t._v("set()")]),t._v("方法来创建的.")])]),t._v(" "),a("h2",{attrs:{id:"字典-dict"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字典-dict","aria-hidden":"true"}},[t._v("#")]),t._v(" 字典 dict")]),t._v(" "),a("p",[t._v("和js中的对象好像是一模一样的...")])])}),[],!1,null,null,null);s.default=e.exports}}]);