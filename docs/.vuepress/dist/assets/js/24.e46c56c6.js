(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{67:function(t,a,e){"use strict";e.r(a);var r=e(0),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"函数作用域"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数作用域")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("真没啥有用的东西")]),e("br"),t._v("\n认认真真看了一遍,对于前端而言全是废话,我就写个小结得了吧")])]),t._v(" "),e("h2",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结","aria-hidden":"true"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),e("p",[t._v('函数是js中最常见的作用域单元.本质上,声明一个函数内部的变量或函数会在所处的作用域中"隐藏"起来,这是有意为之的良好的软件的设计原则.')]),t._v(" "),e("p",[t._v("但函数不是唯一的作用域单元.块作用域指的是变量和函数不仅可以属于所处的作用域,也可以属于某个代码块(通常指{..}内部).")]),t._v(" "),e("p",[t._v("从ES3开始,ttry/catch结构在catch分句中具有块作用域.")]),t._v(" "),e("p",[t._v("在ES6中引入了let关键字,用来在任意代码块中声明变量."),e("code",[t._v("if(..) { let a = 2; }")]),t._v("会声明一个劫持了if的{..}块的变量,并且将变量添加到这个块中.")]),t._v(" "),e("p",[t._v("其实作用域可以作为函数作用域的替代方案,但是还是推荐根据需要选择何种作用域,创造可读可维护的优良代码.")])])}),[],!1,null,null,null);a.default=s.exports}}]);